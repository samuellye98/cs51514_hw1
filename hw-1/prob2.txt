(a) List all the input variables, including state variables: 
    Inputs: 
    
    The input variables are int capacity in the constructor and Object X in Enqueue method.

    The state variables would be the queue, which represents the existing queue of Objects itself; and C, which represents the capacity of the queue.

(b) Define characteristics of the input variables: 
    Characteristics: 

    capacity: value of capacity, e.g. < 0 (illegal), 0 (illegal), 1, > 1

    X: is null?

    queue: current size, i.e. number of elements in queue; is max capacity?; is empty?

    C: value of C, e.g. < 0 (illegal), 0 (illegal), 1, > 1

(c) Partition         | A1 = negative   | A2 = zero | A3 = one | A4 = positive (Base)
    ------------------|-----------------|-----------|----------|---------------------
    Value of capacity | < 0             | 0         |     1    |  > 1

    Partition  | B1 = null | B2 = not null (Base)
    -----------|-----------|---------------------
    Is X null? |    true   |       false

    Partition     | C1 = []  | C2 = [X] | C3 = [X, ...] (Base)
    --------------|----------|----------|----------------------
    Size of queue | 0        | 1        | > 1

    Partition       | D1 = full  | D2 = not full (Base) 
    ----------------|------------|---------------------
    Is queue full?  |    true    |       false   

    Partition       | E1 = empty   | E2 = not empty (Base) 
    ----------------|--------------|----------------------
    Is queue empty? |     true     |       false   

    Partition  | F1 = negative   | F2 = zero | F3 = one | F4 = positive (Base)
    -----------|-----------------|-----------|----------|---------------------
    Value of C | < 0             | 0         |     1    |  > 1

    Designated "Base" block for each partition: Shown above.

(d) Define values for each block in (c)

    Value of capacity
    A1: capacity = -1
    A2: capacity = 0
    A3: capacity = 1
    A4: capacity = 3

    Is X null?
    B1: X = null
    B2: X = 70

    Size of queue
    C1: queue = []
    C2: queue = [50]
    C3: queue = [50, 60]

    Is queue full?
    D1: queue = [50, 60, 70], C = 3
    D2: queue = [50, 60], C = 3

    Is queue empty?
    E1: queue = []
    E2: queue = [50, 60]

    Value of C
    F1: C = -1
    F2: C = 0
    F3: C = 1
    F4: C = 3

(e) Test set that satisfies BCC.

    Consider the test method "public void enQueue(Object X)" for the test set below.

    Base case = (A4, B2, C3, D2, E2, F4): (capacity=2, X=70, queue=[50, 60], queue not full, queue not empty, C=3) 
    // Test Oracle: enQueue successful, queue size now 3 and queue is full

    Test cases for A and F: Note that for the values of A and F being <= 0, i.e. (A1, B2, C3, D2, E2, F1) and (A2, B2, C3, D2, E2, F2), this is not possible since if we have a queue with capacity <= 0, then the queue should not contain any elements. With the other values of capacity, this affects the base cases for characteristics C, D, and E. For example, when capacity = 1 and C = 1, the size of the queue also has to change since it cannot be more than 1, thus we have to use C2 instead of C3. We also have to change either the block for characteristic D or E since with a capacity of 1, the queue can only be either empty or full at the same time. 

    (A3, B2, C2, D1, E2, F3): (capacity=1, X=70, queue=[50], queue full, queue not empty, C=1)
    // Test Oracle: enQueue unsuccessful, queue size still 1 and queue is full

    Test cases for B:
    (A4, B1, C3, D2, E2, F4): (capacity=3, X=null, queue=[50, 60], queue not full, queue not empty, C=3)
    // Test Oracle: enQueue successful, queue size now 3 and queue is full

    Test cases for C: Note that if size of queue is 0, the queue is empty, thus we must change the block for characteristic E from E2 to E1. 
    (A4, B2, C1, D2, E1, F4): (capacity=3, X=70, queue=[], queue not full, queue empty, C=3) 
    // Test Oracle: enQueue successful, queue size now 1 and queue is not full
    (A4, B2, C2, D2, E2, F4): (capacity=3, X=70, queue=[50], queue not full, queue not empty, C=3) 
    // Test Oracle: enQueue successful, queue size now 2 and queue is not full

    Test cases for D:
    (A4, B2, C3, D1, E2, F4): (capacity=3, X=70, queue=[50, 60, 70], queue full, queue not empty, C=3)
    // Test Oracle: enQueue unsuccessful, queue size still 3 and queue is full

    Test cases for E: Note that if queue is empty, the size of the queue is 0, then we must change block for characteristic C from C3 to C1.
    (A4, B2, C1, D2, E1, F4): (capacity=2, X=70, queue=[], queue not full, queue empty, C=3)
    // Test Oracle: enQueue successful, queue size now 1 and queue is not full